{"version":3,"sources":["components/Article/Vector.svg","components/ArticleView/Vector.svg","redux/reducers/articleReducer.ts","redux/actions/actionTypes.ts","redux/reducers/index.ts","redux/store/store.ts","redux/store/index.ts","redux/actions/actions.ts","components/Tag/index.ts","components/Tag/Tag.tsx","components/Tags/index.ts","components/Tags/Tags.tsx","components/Article/index.ts","components/Article/Article.tsx","components/ArticleList/ArticleList.tsx","components/ArticleList/index.ts","components/ArticleView/ArticleView.tsx","components/ArticleView/index.ts","components/App/index.ts","components/App/App.tsx","index.tsx"],"names":["module","exports","initialState","page","totalPage","articles","isLoading","articleReducer","state","type","payload","newState","Object","assign","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","articleLoad","Tag","value","className","Tags","tagList","map","tag","key","nanoid","Article","slug","title","description","updatedAt","favoritesCount","author","username","image","to","src","likeBtn","alt","format","Date","antIcon","LoadingOutlined","style","fontSize","spin","ArticleList","dispatch","useDispatch","useSelector","article","onChange","articlePageUpdate","size","showQuickJumper","total","indicator","fetchData","url","a","fetch","response","json","console","error","ArticleView","useState","setArticle","setIsLoading","useParams","loadData","data","useEffect","body","source","App","then","articlesCount","articleTotalPageUpdate","articleUpdate","catch","articleUpdateAsync","href","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3f930aa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Vector.d17fcd0b.svg\";","module.exports = __webpack_public_path__ + \"static/media/Vector.d17fcd0b.svg\";","import {\n  ARTICLE_UPDATE,\n  ARTICLE_PAGE,\n  ARTICAL_TOTAL_PAGE_UPDATE,\n  FETCH_ARTICAL_LOAD,\n} from '../actions/actionTypes';\n\nconst initialState: any = {\n  page: 0,\n  totalPage: 0,\n  articles: [],\n  isLoading: false,\n};\n\nconst articleReducer = (state = initialState, { type, payload }: any): any => {\n  const newState = { ...state };\n  switch (type) {\n    case ARTICLE_UPDATE:\n      return Object.assign(newState, { articles: payload });\n    case ARTICLE_PAGE:\n      return Object.assign(newState, { page: payload });\n    case ARTICAL_TOTAL_PAGE_UPDATE:\n      return Object.assign(newState, { totalPage: payload });\n    case FETCH_ARTICAL_LOAD:\n      return Object.assign(newState, { isLoading: payload });\n    default:\n      return newState;\n  }\n};\n\nexport default articleReducer;\n","export const ARTICLE_UPDATE = 'ARTICLE_UPDATE';\n\nexport const ARTICLE_PAGE = 'ARTICLE_PAGE';\n\nexport const ARTICAL_TOTAL_PAGE_UPDATE = 'ARTICAL_TOTAL_PAGE_UPDATE';\n\nexport const FETCH_ARTICAL_LOAD = 'FETCH_ARTICAL_LOAD';\n","import { combineReducers } from 'redux';\nimport articleReducer from './articleReducer';\n\nconst rootReducer = combineReducers({\n  articles: articleReducer,\n});\n\nexport default rootReducer;\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from '../reducers';\n\nconst composeEnhancers: Function =\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\nexport default store;\n","import store from './store';\n\nexport default store;\n","import {\n  ARTICLE_UPDATE,\n  ARTICLE_PAGE,\n  ARTICAL_TOTAL_PAGE_UPDATE,\n  FETCH_ARTICAL_LOAD,\n} from './actionTypes';\nimport { Article, ArticleReducerAction } from '../../types';\n\nexport const articleUpdate = (articles: Article[]): ArticleReducerAction => ({\n  type: ARTICLE_UPDATE,\n  payload: articles,\n});\n\nexport const articleTotalPageUpdate = (page: number) => ({\n  type: ARTICAL_TOTAL_PAGE_UPDATE,\n  payload: page,\n});\n\nexport const articleLoad = (isLoading: boolean) => ({\n  type: FETCH_ARTICAL_LOAD,\n  payload: isLoading,\n});\n\nexport const articleUpdateAsync = (dispatch: any, page: number): void => {\n  fetch(\n    `https://conduit.productionready.io/api/articles?limit=20&offset=${\n      page * 20\n    }`\n  )\n    .then(response => response.json())\n    .then(data => {\n      const { articles, articlesCount } = data;\n      dispatch(articleTotalPageUpdate(articlesCount));\n      dispatch(articleUpdate(articles));\n      dispatch(articleLoad(true));\n    })\n    .catch(console.error);\n};\n\nexport const articlePageUpdate = (page: number) => ({\n  type: ARTICLE_PAGE,\n  payload: page,\n});\n","import Tag from './Tag';\n\nexport default Tag;\n","import React from 'react';\nimport { TagTypesProps } from '../../types';\nimport './index.css';\n\nconst Tag: React.FC<TagTypesProps> = ({ value }) => (\n  <span className=\"tags__item\">{value}</span>\n);\n\nexport default Tag;\n","import Tags from './Tags';\n\nexport default Tags;\n","import React from 'react';\nimport { nanoid } from 'nanoid';\n\nimport Tag from '../Tag';\nimport './index.css';\nimport { TagsTypes } from '../../types';\n\nconst Tags: React.FC<TagsTypes> = ({ tagList }) => (\n  <div className=\"tags\">\n    {tagList.map((tag: string) => (\n      <Tag key={nanoid()} value={tag} />\n    ))}\n  </div>\n);\n\nexport default Tags;\n","import Article from './Article';\n\nexport default Article;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { format } from 'date-fns';\n\nimport { Article as ArticleType } from '../../types';\nimport Tags from '../Tags';\nimport './index.css';\n// @ts-ignore\nimport likeBtn from './Vector.svg';\n\nconst Article: React.FC<ArticleType> = ({\n  slug,\n  title,\n  description,\n  updatedAt,\n  favoritesCount,\n  tagList,\n  author: { username, image },\n}) => {\n  return (\n    <article className=\"article\">\n      <div className=\"article-info\">\n        <div className=\"article-info__header\">\n          <Link to={`articles/${slug}`}>\n            <h5 className=\"article-info__title\">{title}</h5>\n          </Link>\n          <span className=\"article-info__likes\">\n            <img\n              src={likeBtn}\n              alt=\"like btn\"\n              className=\"article-info__likes-btn\"\n            />\n            <span className=\"article-info__likes-count\">{favoritesCount}</span>\n          </span>\n        </div>\n        <div className=\"tags\">\n          <Tags tagList={tagList} />\n        </div>\n        <div className=\"article-info__desc\">\n          <p className=\"article-info__text\">{description}</p>\n        </div>\n      </div>\n      <div className=\"article-user\">\n        <div className=\"user-info\">\n          <h6 className=\"user-info__name\">{username}</h6>\n          <p className=\"user-info__update\">\n            {format(new Date(updatedAt), 'MMMM dd, yyyy')}\n          </p>\n        </div>\n        <div className=\"article-user__photo\">\n          <img src={image} alt={username} className=\"article-user__img\" />\n        </div>\n      </div>\n    </article>\n  );\n};\n\nexport default Article;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { Pagination, Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { articlePageUpdate, articleLoad } from '../../redux/actions/actions';\n\nimport { Article as ArticleType } from '../../types';\nimport Article from '../Article';\nimport './index.css';\nimport 'antd/dist/antd.css';\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\nconst ArticleList: React.FC = () => {\n  const dispatch = useDispatch<Function>();\n  const articles: ArticleType[] = useSelector(\n    (state: any) => state.articles.articles\n  );\n  const isLoading: boolean = useSelector(\n    (state: any) => state.articles.isLoading\n  );\n  const totalPage: number = useSelector(\n    (state: any) => state.articles.totalPage\n  );\n\n  const handleChangePagination = (page: number): void => {\n    dispatch(articlePageUpdate(page));\n    dispatch(articleLoad(false));\n  };\n\n  if (articles && isLoading) {\n    return (\n      <>\n        <div className=\"article-list\">\n          {articles.map((article: ArticleType) => (\n            <Article key={nanoid()} {...article} />\n          ))}\n        </div>\n        <Pagination\n          onChange={handleChangePagination}\n          size=\"small\"\n          showQuickJumper={false}\n          total={totalPage}\n        />\n      </>\n    );\n  }\n  return <Spin indicator={antIcon} />;\n};\n\nexport default ArticleList;\n","import ArticleList from './ArticleList';\n\nexport default ArticleList;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ReactMarkdown from 'react-markdown';\nimport { format } from 'date-fns';\nimport { Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nimport Tags from '../Tags';\nimport {\n  Article as ArticleType,\n  ArticleViewMatchParamsType,\n} from '../../types';\n// @ts-ignore\nimport likeBtn from './Vector.svg';\n\nconst fetchData = async (url: string): Promise<ArticleType | null> => {\n  try {\n    const response = await fetch(url);\n    const { article } = await response.json();\n    return article;\n  } catch (e) {\n    console.error(e);\n    return null;\n  }\n};\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\nconst ArticleView: React.FC = () => {\n  const [article, setArticle] = useState<ArticleType>();\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const { slug } = useParams<ArticleViewMatchParamsType>();\n\n  const loadData = async (url: string): Promise<void> => {\n    const data: ArticleType | null = await fetchData(url);\n\n    if (data) {\n      setArticle(data);\n      setIsLoading(true);\n    }\n  };\n\n  useEffect(() => {\n    loadData(`https://conduit.productionready.io/api/articles/${slug}`);\n  }, []);\n\n  if (!isLoading) return <Spin indicator={antIcon} />;\n\n  const {\n    title,\n    favoritesCount,\n    tagList,\n    description,\n    body,\n    updatedAt,\n    author: { username, image },\n  }: any = article;\n\n  return (\n    <article className=\"article\">\n      <div className=\"article-info\">\n        <div className=\"article-info__header\">\n          <h5 className=\"article-info__title\">{title}</h5>\n          <span className=\"article-info__likes\">\n            <img\n              src={likeBtn}\n              alt=\"like btn\"\n              className=\"article-info__likes-btn\"\n            />\n            <span className=\"article-info__likes-count\">{favoritesCount}</span>\n          </span>\n        </div>\n        <div className=\"tags\">\n          <Tags tagList={tagList} />\n        </div>\n        <div className=\"article-info__desc\">\n          <p className=\"article-info__text\">{description}</p>\n        </div>\n        <div className=\"article-info__desc\">\n          <ReactMarkdown source={body} />\n        </div>\n      </div>\n      <div className=\"article-user\">\n        <div className=\"user-info\">\n          <h6 className=\"user-info__name\">{username}</h6>\n          <p className=\"user-info__update\">\n            {format(new Date(updatedAt), 'MMMM dd, yyyy')}\n          </p>\n        </div>\n        <div className=\"article-user__photo\">\n          <img src={image} alt={username} className=\"article-user__img\" />\n        </div>\n      </div>\n    </article>\n  );\n};\n\nexport default ArticleView;\n","import ArticleView from './ArticleView';\n\nexport default ArticleView;\n","import App from './App';\n\nexport default App;\n","import React, { useEffect } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { articleUpdateAsync } from '../../redux/actions/actions';\n\nimport ArticleList from '../ArticleList';\nimport ArticleView from '../ArticleView';\nimport './index.css';\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch<Function>();\n  const page: number = useSelector((state: any) => state.articles.page);\n\n  useEffect(() => {\n    articleUpdateAsync(dispatch, page);\n  }, [dispatch, page]);\n\n  return (\n    <div className=\"wrapper\">\n      <header className=\"header wrapper__header\">\n        <a href=\"/\">\n          <h6 className=\"header__title\">Realworld Blog</h6>\n        </a>\n        <div className=\"controls\">\n          <input\n            type=\"button\"\n            value=\"Sign In\"\n            className=\"btn btn-signin controls__btn-signin\"\n          />\n          <input type=\"button\" value=\"Sign Out\" className=\"btn btn-signout\" />\n        </div>\n      </header>\n      <main className=\"main\">\n        <Router>\n          <Switch>\n            <Route path=\"/\" component={ArticleList} exact />\n            <Route path=\"/articles\" component={ArticleList} exact />\n            <Route path=\"/articles/:slug\" component={ArticleView} />\n\n            <Redirect to=\"/\" />\n          </Switch>\n        </Router>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}